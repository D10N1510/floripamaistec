// <auto-generated />
using System;
using Bercario;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Bercario.Migrations
{
    [DbContext(typeof(BercarioContexto))]
    [Migration("20230420064556_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Bercario.Models.Bebe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Altura")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data_Nascimento")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdMae")
                        .HasColumnType("int");

                    b.Property<int>("IdParto")
                        .HasColumnType("int");

                    b.Property<decimal>("Peso_Nascimento")
                        .HasColumnType("decimal(4,3)");

                    b.HasKey("Id")
                        .HasName("PK__Bebe");

                    b.HasIndex("IdMae");

                    b.HasIndex("IdParto");

                    b.ToTable("Bebe", (string)null);
                });

            modelBuilder.Entity("Bercario.Models.Mae", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Data_Nascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id")
                        .HasName("PK__Mae");

                    b.ToTable("Mae", (string)null);
                });

            modelBuilder.Entity("Bercario.Models.Medico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CRM")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("Celular")
                        .HasColumnType("int");

                    b.Property<string>("Especialidade")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id")
                        .HasName("PK__Medico");

                    b.ToTable("Medico", (string)null);
                });

            modelBuilder.Entity("Bercario.Models.Parto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Data_Parto")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("Horario_Parto")
                        .HasColumnType("time");

                    b.Property<int>("IdMedico")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Parto");

                    b.HasIndex("IdMedico");

                    b.ToTable("Parto", (string)null);
                });

            modelBuilder.Entity("Bercario.Models.Bebe", b =>
                {
                    b.HasOne("Bercario.Models.Mae", "MaeDoBebe")
                        .WithMany("Bebes")
                        .HasForeignKey("IdMae")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Id_Mae");

                    b.HasOne("Bercario.Models.Parto", "PartoDoBebe")
                        .WithMany("BebesDoParto")
                        .HasForeignKey("IdParto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Id_Parto");

                    b.Navigation("MaeDoBebe");

                    b.Navigation("PartoDoBebe");
                });

            modelBuilder.Entity("Bercario.Models.Parto", b =>
                {
                    b.HasOne("Bercario.Models.Medico", "MedicoDoParto")
                        .WithMany("Partos")
                        .HasForeignKey("IdMedico")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Id_Medico");

                    b.Navigation("MedicoDoParto");
                });

            modelBuilder.Entity("Bercario.Models.Mae", b =>
                {
                    b.Navigation("Bebes");
                });

            modelBuilder.Entity("Bercario.Models.Medico", b =>
                {
                    b.Navigation("Partos");
                });

            modelBuilder.Entity("Bercario.Models.Parto", b =>
                {
                    b.Navigation("BebesDoParto");
                });
#pragma warning restore 612, 618
        }
    }
}
