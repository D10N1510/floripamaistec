// <auto-generated />
using System;
using EscolaSemana10;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EscolaSemana10.Migrations
{
    [DbContext(typeof(EscolaContexto))]
    [Migration("20230422053924_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EscolaSemana10.Models.Answer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AnswerText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<float>("Score")
                        .HasColumnType("real");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.HasIndex("StudentId");

                    b.ToTable("Answer", (string)null);
                });

            modelBuilder.Entity("EscolaSemana10.Models.Discipline", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DisciplineName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TeacherId");

                    b.ToTable("Discipline", (string)null);
                });

            modelBuilder.Entity("EscolaSemana10.Models.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Enunciation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuizId")
                        .HasColumnType("int");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(4,3)");

                    b.HasKey("Id");

                    b.HasIndex("QuizId");

                    b.ToTable("Question", (string)null);
                });

            modelBuilder.Entity("EscolaSemana10.Models.Quiz", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateClose")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOpen")
                        .HasColumnType("datetime2");

                    b.Property<int>("DisciplineId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DisciplineId");

                    b.ToTable("Quiz", (string)null);
                });

            modelBuilder.Entity("EscolaSemana10.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Period")
                        .HasColumnType("int");

                    b.Property<int>("RA")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Student", (string)null);
                });

            modelBuilder.Entity("EscolaSemana10.Models.Student_Discipline", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DisciplineId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DisciplineId");

                    b.HasIndex("StudentId");

                    b.ToTable("Student_Discipline", (string)null);
                });

            modelBuilder.Entity("EscolaSemana10.Models.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Teacher", (string)null);
                });

            modelBuilder.Entity("EscolaSemana10.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("EscolaSemana10.Models.Answer", b =>
                {
                    b.HasOne("EscolaSemana10.Models.Question", "Question_Id")
                        .WithMany("Answerss")
                        .HasForeignKey("QuestionId")
                        .IsRequired()
                        .HasConstraintName("FK__QuestionAnswer");

                    b.HasOne("EscolaSemana10.Models.Student", "Student_Id")
                        .WithMany("Answerss")
                        .HasForeignKey("StudentId")
                        .IsRequired()
                        .HasConstraintName("FK__StudentAnswer");

                    b.Navigation("Question_Id");

                    b.Navigation("Student_Id");
                });

            modelBuilder.Entity("EscolaSemana10.Models.Discipline", b =>
                {
                    b.HasOne("EscolaSemana10.Models.Teacher", "Teacher_Id")
                        .WithMany("Discipliness")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__TeacherDiscipline");

                    b.Navigation("Teacher_Id");
                });

            modelBuilder.Entity("EscolaSemana10.Models.Question", b =>
                {
                    b.HasOne("EscolaSemana10.Models.Quiz", "Quiz_Id")
                        .WithMany("Questionss")
                        .HasForeignKey("QuizId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__QuizQuestion");

                    b.Navigation("Quiz_Id");
                });

            modelBuilder.Entity("EscolaSemana10.Models.Quiz", b =>
                {
                    b.HasOne("EscolaSemana10.Models.Discipline", "Discipline_Id")
                        .WithMany("Quizss")
                        .HasForeignKey("DisciplineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Discipline_Q");

                    b.Navigation("Discipline_Id");
                });

            modelBuilder.Entity("EscolaSemana10.Models.Student", b =>
                {
                    b.HasOne("EscolaSemana10.Models.User", "User_Id")
                        .WithMany("Studentss")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__User_S");

                    b.Navigation("User_Id");
                });

            modelBuilder.Entity("EscolaSemana10.Models.Student_Discipline", b =>
                {
                    b.HasOne("EscolaSemana10.Models.Discipline", "Discipline_Id")
                        .WithMany("Student_Discipliness")
                        .HasForeignKey("DisciplineId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK__Discipline_SD");

                    b.HasOne("EscolaSemana10.Models.Student", "Student_Id")
                        .WithMany("Student_Discipliness")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK__Student_SD");

                    b.Navigation("Discipline_Id");

                    b.Navigation("Student_Id");
                });

            modelBuilder.Entity("EscolaSemana10.Models.Teacher", b =>
                {
                    b.HasOne("EscolaSemana10.Models.User", "User_Id")
                        .WithMany("Teacherss")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__User_T");

                    b.Navigation("User_Id");
                });

            modelBuilder.Entity("EscolaSemana10.Models.Discipline", b =>
                {
                    b.Navigation("Quizss");

                    b.Navigation("Student_Discipliness");
                });

            modelBuilder.Entity("EscolaSemana10.Models.Question", b =>
                {
                    b.Navigation("Answerss");
                });

            modelBuilder.Entity("EscolaSemana10.Models.Quiz", b =>
                {
                    b.Navigation("Questionss");
                });

            modelBuilder.Entity("EscolaSemana10.Models.Student", b =>
                {
                    b.Navigation("Answerss");

                    b.Navigation("Student_Discipliness");
                });

            modelBuilder.Entity("EscolaSemana10.Models.Teacher", b =>
                {
                    b.Navigation("Discipliness");
                });

            modelBuilder.Entity("EscolaSemana10.Models.User", b =>
                {
                    b.Navigation("Studentss");

                    b.Navigation("Teacherss");
                });
#pragma warning restore 612, 618
        }
    }
}
